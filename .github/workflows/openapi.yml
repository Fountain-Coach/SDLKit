name: SDLKit OpenAPI

on:
  push:
    branches: [ main ]
    paths:
      - 'Sources/SDLKitAPI/**'
      - '.github/workflows/openapi.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Sources/SDLKitAPI/**'
      - '.github/workflows/openapi.yml'

jobs:
  openapi-build:
    runs-on: macos-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            .build
          key: ${{ runner.os }}-swiftpm-${{ hashFiles('Package.swift', 'Package.resolved', 'Sources/SDLKitAPI/openapi.yaml', 'Sources/SDLKitAPI/openapi-generator-config.yaml') }}
      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode.app/Contents/Developer"
      - name: Swift version
        run: swift --version
      - name: Build OpenAPI target (codegen)
        run: swift build -v --target SDLKitAPI
      - name: Build NIO server
        run: swift build -v --target SDLKitNIO
      - name: Build generated-server adapter (compiles only)
        run: swift build -v --target SDLKitAPIServerAdapter
      - name: Run adapter smoke (typed health/version)
        run: |
          set -euo pipefail
          swift run -c debug SDLKitAPISmoke > smoke.txt
          cat smoke.txt
          grep '"ok":true' smoke.txt
          grep '"version":' smoke.txt
      - name: Smoke test NIO server (health/version)
        run: |
          set -euo pipefail
          # Pre-build the product to avoid compile time during run
          swift build -c debug --product SDLKitNIO
          ./.build/debug/SDLKitNIO &
          srv=$!
          # Wait up to 30s for server to become ready
          for i in $(seq 1 30); do
            if curl -sf -X GET http://127.0.0.1:8723/health | grep -q '"ok":true'; then
              break
            fi
            sleep 1
          done
          curl -sS -X GET http://127.0.0.1:8723/health | grep '"ok":true'
          curl -sS -X GET http://127.0.0.1:8723/version | grep '"agent"' | grep '"openapi"'
          kill $srv || true

      - name: Run generated server and curl health/version
        run: |
          set -euo pipefail
          swift build -c debug --product SDLKitGeneratedServer
          ./.build/debug/SDLKitGeneratedServer &
          srv=$!
          for i in $(seq 1 30); do
            if curl -sf http://127.0.0.1:8724/health | grep -q '"ok":true'; then
              break
            fi
            sleep 1
          done
          curl -sS http://127.0.0.1:8724/health | grep '"ok":true'
          curl -sS http://127.0.0.1:8724/version | grep '"version":'
          kill $srv || true
