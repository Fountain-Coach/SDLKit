Ly8gZmFrZSBtZXRhbGxpYiBwbGFjZWhvbGRlcgovLyBmYWtlIG1ldGFsIEFJUiBwbGFjZWhvbGRl
cgojaW5jbHVkZSA8bWV0YWxfc3RkbGliPgojaW5jbHVkZSA8c2ltZC9zaW1kLmg+Cgp1c2luZyBu
YW1lc3BhY2UgbWV0YWw7CgpzdHJ1Y3QgdHlwZV9Db25zdGFudEJ1ZmZlcl9TY2VuZVBhcmFtcwp7
CiAgICBmbG9hdDR4NCBtb2RlbE1hdHJpeDsKICAgIGZsb2F0NHg0IHZpZXdQcm9qZWN0aW9uTWF0
cml4OwogICAgZmxvYXQ0eDQgbm9ybWFsTWF0cml4OwogICAgZmxvYXQ0IGNhbWVyYVBvc2l0aW9u
OwogICAgZmxvYXQ0IGxpZ2h0RGlyZWN0aW9uSW50ZW5zaXR5OwogICAgZmxvYXQ0IGxpZ2h0Q29s
b3JFeHBvc3VyZTsKfTsKCnN0cnVjdCB0eXBlX0NvbnN0YW50QnVmZmVyX01hdGVyaWFsUGFyYW1z
CnsKICAgIGZsb2F0NCBiYXNlQ29sb3JGYWN0b3I7CiAgICBmbG9hdDQgZW1pc3NpdmVGYWN0b3I7
CiAgICBmbG9hdDIgdXZTY2FsZTsKICAgIGZsb2F0MiB1dk9mZnNldDsKICAgIGZsb2F0IG1ldGFs
bGljRmFjdG9yOwogICAgZmxvYXQgcm91Z2huZXNzRmFjdG9yOwogICAgZmxvYXQgYW9TdHJlbmd0
aDsKICAgIGZsb2F0IHBhZGRpbmc7Cn07CgpzdHJ1Y3QgcGJyX2ZvcndhcmRfdnNfb3V0CnsKICAg
IGZsb2F0MyBvdXRfdmFyX1BPU0lUSU9OMCBbW3VzZXIobG9jbjApXV07CiAgICBmbG9hdDMgb3V0
X3Zhcl9OT1JNQUwwIFtbdXNlcihsb2NuMSldXTsKICAgIGZsb2F0MyBvdXRfdmFyX1RBTkdFTlQw
IFtbdXNlcihsb2NuMildXTsKICAgIGZsb2F0MiBvdXRfdmFyX1RFWENPT1JEMCBbW3VzZXIobG9j
bjMpXV07CiAgICBmbG9hdDQgZ2xfUG9zaXRpb24gW1twb3NpdGlvbl1dOwp9OwoKc3RydWN0IHBi
cl9mb3J3YXJkX3ZzX2luCnsKICAgIGZsb2F0MyBpbl92YXJfUE9TSVRJT04gW1thdHRyaWJ1dGUo
MCldXTsKICAgIGZsb2F0MyBpbl92YXJfTk9STUFMIFtbYXR0cmlidXRlKDEpXV07CiAgICBmbG9h
dDMgaW5fdmFyX1RBTkdFTlQgW1thdHRyaWJ1dGUoMildXTsKICAgIGZsb2F0MiBpbl92YXJfVEVY
Q09PUkQwIFtbYXR0cmlidXRlKDMpXV07Cn07Cgp2ZXJ0ZXggcGJyX2ZvcndhcmRfdnNfb3V0IHBi
cl9mb3J3YXJkX3ZzKHBicl9mb3J3YXJkX3ZzX2luIGluIFtbc3RhZ2VfaW5dXSwgY29uc3RhbnQg
dHlwZV9Db25zdGFudEJ1ZmZlcl9TY2VuZVBhcmFtcyYgU2NlbmVDQiBbW2J1ZmZlcigwKV1dLCBj
b25zdGFudCB0eXBlX0NvbnN0YW50QnVmZmVyX01hdGVyaWFsUGFyYW1zJiBNYXRlcmlhbENCIFtb
YnVmZmVyKDEpXV0pCnsKICAgIHBicl9mb3J3YXJkX3ZzX291dCBvdXQgPSB7fTsKICAgIGZsb2F0
NCBfNTAgPSBmbG9hdDQoaW4uaW5fdmFyX1BPU0lUSU9OLCAxLjApICogU2NlbmVDQi5tb2RlbE1h
dHJpeDsKICAgIGZsb2F0M3gzIF82MyA9IGZsb2F0M3gzKGZsb2F0NChTY2VuZUNCLm5vcm1hbE1h
dHJpeFswXVswXSwgU2NlbmVDQi5ub3JtYWxNYXRyaXhbMV1bMF0sIFNjZW5lQ0Iubm9ybWFsTWF0
cml4WzJdWzBdLCBTY2VuZUNCLm5vcm1hbE1hdHJpeFszXVswXSkueHl6LCBmbG9hdDQoU2NlbmVD
Qi5ub3JtYWxNYXRyaXhbMF1bMV0sIFNjZW5lQ0Iubm9ybWFsTWF0cml4WzFdWzFdLCBTY2VuZUNC
Lm5vcm1hbE1hdHJpeFsyXVsxXSwgU2NlbmVDQi5ub3JtYWxNYXRyaXhbM11bMV0pLnh5eiwgZmxv
YXQ0KFNjZW5lQ0Iubm9ybWFsTWF0cml4WzBdWzJdLCBTY2VuZUNCLm5vcm1hbE1hdHJpeFsxXVsy
XSwgU2NlbmVDQi5ub3JtYWxNYXRyaXhbMl1bMl0sIFNjZW5lQ0Iubm9ybWFsTWF0cml4WzNdWzJd
KS54eXopOwogICAgb3V0LmdsX1Bvc2l0aW9uID0gXzUwICogU2NlbmVDQi52aWV3UHJvamVjdGlv
bk1hdHJpeDsKICAgIG91dC5vdXRfdmFyX1BPU0lUSU9OMCA9IF81MC54eXo7CiAgICBvdXQub3V0
X3Zhcl9OT1JNQUwwID0gZmFzdDo6bm9ybWFsaXplKGluLmluX3Zhcl9OT1JNQUwgKiBfNjMpOwog
ICAgb3V0Lm91dF92YXJfVEFOR0VOVDAgPSBmYXN0Ojpub3JtYWxpemUoaW4uaW5fdmFyX1RBTkdF
TlQgKiBfNjMpOwogICAgb3V0Lm91dF92YXJfVEVYQ09PUkQwID0gKGluLmluX3Zhcl9URVhDT09S
RDAgKiBNYXRlcmlhbENCLnV2U2NhbGUpICsgTWF0ZXJpYWxDQi51dk9mZnNldDsKICAgIHJldHVy
biBvdXQ7Cn0KCgoKCnN0cnVjdCB0eXBlX0NvbnN0YW50QnVmZmVyX1NjZW5lUGFyYW1zCnsKICAg
IGZsb2F0NHg0IG1vZGVsTWF0cml4OwogICAgZmxvYXQ0eDQgdmlld1Byb2plY3Rpb25NYXRyaXg7
CiAgICBmbG9hdDR4NCBub3JtYWxNYXRyaXg7CiAgICBmbG9hdDQgY2FtZXJhUG9zaXRpb247CiAg
ICBmbG9hdDQgbGlnaHREaXJlY3Rpb25JbnRlbnNpdHk7CiAgICBmbG9hdDQgbGlnaHRDb2xvckV4
cG9zdXJlOwp9OwoKc3RydWN0IHR5cGVfQ29uc3RhbnRCdWZmZXJfTWF0ZXJpYWxQYXJhbXMKewog
ICAgZmxvYXQ0IGJhc2VDb2xvckZhY3RvcjsKICAgIGZsb2F0NCBlbWlzc2l2ZUZhY3RvcjsKICAg
IGZsb2F0MiB1dlNjYWxlOwogICAgZmxvYXQyIHV2T2Zmc2V0OwogICAgZmxvYXQgbWV0YWxsaWNG
YWN0b3I7CiAgICBmbG9hdCByb3VnaG5lc3NGYWN0b3I7CiAgICBmbG9hdCBhb1N0cmVuZ3RoOwog
ICAgZmxvYXQgcGFkZGluZzsKfTsKCnN0cnVjdCBwYnJfZm9yd2FyZF9wc19vdXQKewogICAgZmxv
YXQ0IG91dF92YXJfU1ZfVGFyZ2V0IFtbY29sb3IoMCldXTsKfTsKCnN0cnVjdCBwYnJfZm9yd2Fy
ZF9wc19pbgp7CiAgICBmbG9hdDMgaW5fdmFyX1BPU0lUSU9OMCBbW3VzZXIobG9jbjApXV07CiAg
ICBmbG9hdDMgaW5fdmFyX05PUk1BTDAgW1t1c2VyKGxvY24xKV1dOwogICAgZmxvYXQzIGluX3Zh
cl9UQU5HRU5UMCBbW3VzZXIobG9jbjIpXV07CiAgICBmbG9hdDIgaW5fdmFyX1RFWENPT1JEMCBb
W3VzZXIobG9jbjMpXV07Cn07CgpmcmFnbWVudCBwYnJfZm9yd2FyZF9wc19vdXQgcGJyX2Zvcndh
cmRfcHMocGJyX2ZvcndhcmRfcHNfaW4gaW4gW1tzdGFnZV9pbl1dLCBjb25zdGFudCB0eXBlX0Nv
bnN0YW50QnVmZmVyX1NjZW5lUGFyYW1zJiBTY2VuZUNCIFtbYnVmZmVyKDApXV0sIGNvbnN0YW50
IHR5cGVfQ29uc3RhbnRCdWZmZXJfTWF0ZXJpYWxQYXJhbXMmIE1hdGVyaWFsQ0IgW1tidWZmZXIo
MSldXSwgdGV4dHVyZTJkPGZsb2F0PiBBbGJlZG9UZXh0dXJlIFtbdGV4dHVyZSgwKV1dLCB0ZXh0
dXJlMmQ8ZmxvYXQ+IE5vcm1hbFRleHR1cmUgW1t0ZXh0dXJlKDEpXV0sIHRleHR1cmUyZDxmbG9h
dD4gTWV0YWxsaWNSb3VnaG5lc3NUZXh0dXJlIFtbdGV4dHVyZSgyKV1dLCB0ZXh0dXJlMmQ8Zmxv
YXQ+IEFtYmllbnRPY2NsdXNpb25UZXh0dXJlIFtbdGV4dHVyZSgzKV1dLCB0ZXh0dXJlMmQ8Zmxv
YXQ+IEVtaXNzaXZlVGV4dHVyZSBbW3RleHR1cmUoNCldXSwgdGV4dHVyZWN1YmU8ZmxvYXQ+IEly
cmFkaWFuY2VNYXAgW1t0ZXh0dXJlKDUpXV0sIHRleHR1cmVjdWJlPGZsb2F0PiBQcmVmaWx0ZXJN
YXAgW1t0ZXh0dXJlKDYpXV0sIHRleHR1cmUyZDxmbG9hdD4gQlJERkxVVCBbW3RleHR1cmUoNyld
XSwgc2FtcGxlciBNYXRlcmlhbFNhbXBsZXIgW1tzYW1wbGVyKDApXV0sIHNhbXBsZXIgRW52aXJv
bm1lbnRTYW1wbGVyIFtbc2FtcGxlcigxKV1dLCBzYW1wbGVyIEx1dFNhbXBsZXIgW1tzYW1wbGVy
KDIpXV0pCnsKICAgIHBicl9mb3J3YXJkX3BzX291dCBvdXQgPSB7fTsKICAgIGZsb2F0MyBfNzcg
PSBmYXN0Ojpub3JtYWxpemUoU2NlbmVDQi5jYW1lcmFQb3NpdGlvbi54eXogLSBpbi5pbl92YXJf
UE9TSVRJT04wKTsKICAgIGZsb2F0MyBfNzggPSBmYXN0Ojpub3JtYWxpemUoaW4uaW5fdmFyX05P
Uk1BTDApOwogICAgZmxvYXQ0IF84MiA9IEFsYmVkb1RleHR1cmUuc2FtcGxlKE1hdGVyaWFsU2Ft
cGxlciwgaW4uaW5fdmFyX1RFWENPT1JEMCk7CiAgICBmbG9hdDMgXzk0ID0gZmFzdDo6bm9ybWFs
aXplKGluLmluX3Zhcl9UQU5HRU5UMCAtIChfNzggKiBkb3QoXzc4LCBpbi5pbl92YXJfVEFOR0VO
VDApKSk7CiAgICBmbG9hdDMgXzk4ID0gZmFzdDo6bm9ybWFsaXplKGZsb2F0M3gzKF85NCwgY3Jv
c3MoXzc4LCBfOTQpLCBfNzgpICogZmFzdDo6bm9ybWFsaXplKChOb3JtYWxUZXh0dXJlLnNhbXBs
ZShNYXRlcmlhbFNhbXBsZXIsIGluLmluX3Zhcl9URVhDT09SRDApLnh5eiAqIDIuMCkgLSBmbG9h
dDMoMS4wKSkpOwogICAgZmxvYXQ0IF8xMDIgPSBNZXRhbGxpY1JvdWdobmVzc1RleHR1cmUuc2Ft
cGxlKE1hdGVyaWFsU2FtcGxlciwgaW4uaW5fdmFyX1RFWENPT1JEMCk7CiAgICBmbG9hdCBfMTA3
ID0gZmFzdDo6Y2xhbXAoXzEwMi56ICogTWF0ZXJpYWxDQi5tZXRhbGxpY0ZhY3RvciwgMC4wLCAx
LjApOwogICAgZmxvYXQgXzExMiA9IGZhc3Q6OmNsYW1wKF8xMDIueSAqIE1hdGVyaWFsQ0Iucm91
Z2huZXNzRmFjdG9yLCAwLjAsIDEuMCk7CiAgICBmbG9hdDMgXzEyMSA9IF84Mi54eXo7CiAgICBm
bG9hdDMgXzEyMyA9IG1peChmbG9hdDMoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUpLCBf
MTIxLCBmbG9hdDMoXzEwNykpOwogICAgZmxvYXQzIF8xMjcgPSBmYXN0Ojpub3JtYWxpemUoU2Nl
bmVDQi5saWdodERpcmVjdGlvbkludGVuc2l0eS54eXopOwogICAgZmxvYXQzIF8xMjkgPSBmYXN0
Ojpub3JtYWxpemUoXzc3ICsgXzEyNyk7CiAgICBmbG9hdCBfMTMwID0gZG90KF85OCwgXzEyNyk7
CiAgICBmbG9hdCBfMTMxID0gZmFzdDo6Y2xhbXAoXzEzMCwgMC4wLCAxLjApOwogICAgZmxvYXQg
XzEzMiA9IGRvdChfOTgsIF83Nyk7CiAgICBmbG9hdCBfMTMzID0gZmFzdDo6Y2xhbXAoXzEzMiwg
MC4wLCAxLjApOwogICAgZmxvYXQgXzEzNiA9IF8xMTIgKiBfMTEyOwogICAgZmxvYXQgXzEzNyA9
IF8xMzYgKiBfMTM2OwogICAgZmxvYXQgXzEzOSA9IHByZWNpc2U6Om1heChkb3QoXzk4LCBfMTI5
KSwgMC4wKTsKICAgIGZsb2F0IF8xNDMgPSAoKF8xMzkgKiBfMTM5KSAqIChfMTM3IC0gMS4wKSkg
KyAxLjA7CiAgICBmbG9hdCBfMTQ4ID0gcHJlY2lzZTo6bWF4KF8xMzIsIDAuMCk7CiAgICBmbG9h
dCBfMTQ5ID0gXzExMiArIDEuMDsKICAgIGZsb2F0IF8xNTEgPSAoXzE0OSAqIF8xNDkpICogMC4x
MjU7CiAgICBmbG9hdCBfMTUyID0gMS4wIC0gXzE1MTsKICAgIGZsb2F0IF8xNTcgPSBwcmVjaXNl
OjptYXgoXzEzMCwgMC4wKTsKICAgIGZsb2F0MyBfMTY3ID0gXzEyMyArICgoZmxvYXQzKDEuMCkg
LSBfMTIzKSAqIHBvdygxLjAgLSBmYXN0OjpjbGFtcChkb3QoXzc3LCBfMTI5KSwgMC4wLCAxLjAp
LCA1LjApKTsKICAgIGZsb2F0MyBfMTc3ID0gKGZsb2F0MygxLjApIC0gXzE2NykgKiAoMS4wIC0g
XzEwNyk7CiAgICBmbG9hdDQgXzE5NiA9IEJSREZMVVQuc2FtcGxlKEx1dFNhbXBsZXIsIGZsb2F0
MihfMTMzLCBfMTEyKSk7CiAgICBmbG9hdDMgXzIyMCA9ICgoKCgoKCgoXzE3NyAqIF8xMjEpICog
ZmxvYXQzKDAuMzE4MzA5ODczMzQyNTE0MDM4MDg1OTM3NSkpICsgKChfMTY3ICogKChfMTM3IC8g
cHJlY2lzZTo6bWF4KCgzLjE0MTU5Mjc0MTAxMjU3MzI0MjE4NzUgKiBfMTQzKSAqIF8xNDMsIDku
OTk5OTk5NzQ3Mzc4NzUxNjM1NTUxNDUyNjM2NzE4OGUtMDUpKSAqICgoXzE0OCAvIHByZWNpc2U6
Om1heCgoXzE0OCAqIF8xNTIpICsgXzE1MSwgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3
MTg4ZS0wNSkpICogKF8xNTcgLyBwcmVjaXNlOjptYXgoKF8xNTcgKiBfMTUyKSArIF8xNTEsIDku
OTk5OTk5NzQ3Mzc4NzUxNjM1NTUxNDUyNjM2NzE4OGUtMDUpKSkpKSAvIGZsb2F0MyhwcmVjaXNl
OjptYXgoKDQuMCAqIF8xMzEpICogXzEzMywgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3
MTg4ZS0wNSkpKSkgKiBTY2VuZUNCLmxpZ2h0Q29sb3JFeHBvc3VyZS54eXopICogKFNjZW5lQ0Iu
bGlnaHREaXJlY3Rpb25JbnRlbnNpdHkudyAqIF8xMzEpKSArICgoSXJyYWRpYW5jZU1hcC5zYW1w
bGUoRW52aXJvbm1lbnRTYW1wbGVyLCBfOTgpLnh5eiAqIF8xMjEpICogXzE3NykpICsgKFByZWZp
bHRlck1hcC5zYW1wbGUoRW52aXJvbm1lbnRTYW1wbGVyLCByZWZsZWN0KC1fNzcsIF85OCksIGxl
dmVsKF8xMTIgKiA1LjApKS54eXogKiAoKF8xNjcgKiBfMTk2LngpICsgZmxvYXQzKF8xOTYueSkp
KSkgKiBtaXgoMS4wLCBBbWJpZW50T2NjbHVzaW9uVGV4dHVyZS5zYW1wbGUoTWF0ZXJpYWxTYW1w
bGVyLCBpbi5pbl92YXJfVEVYQ09PUkQwKS54LCBNYXRlcmlhbENCLmFvU3RyZW5ndGgpKSAqIFNj
ZW5lQ0IubGlnaHRDb2xvckV4cG9zdXJlLnc7CiAgICBmbG9hdDMgXzIzMCA9IF8yMjAgKyAoRW1p
c3NpdmVUZXh0dXJlLnNhbXBsZShNYXRlcmlhbFNhbXBsZXIsIGluLmluX3Zhcl9URVhDT09SRDAp
Lnh5eiAqIE1hdGVyaWFsQ0IuZW1pc3NpdmVGYWN0b3IueHl6KTsKICAgIG91dC5vdXRfdmFyX1NW
X1RhcmdldCA9IGZsb2F0NChfMjMwIC8gKF8yMzAgKyBmbG9hdDMoMS4wKSksIF84Mi53ICogTWF0
ZXJpYWxDQi5iYXNlQ29sb3JGYWN0b3Iudyk7CiAgICByZXR1cm4gb3V0Owp9Cg==
